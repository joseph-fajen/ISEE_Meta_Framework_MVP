<?xml version="1.0" encoding="UTF-8"?>
<svg width="900" height="800" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="900" height="800" fill="#f8f9fa" rx="5" ry="5"/>
  
  <!-- Title -->
  <text x="450" y="30" font-family="Arial" font-size="24" text-anchor="middle" font-weight="bold">Idea Synthesis and Extraction Engine - Detailed Workflow</text>
  
  <!-- Phase 1: Input Preparation -->
  <rect x="50" y="70" width="800" height="150" fill="#e6f2ff" stroke="#0066cc" stroke-width="2" rx="10" ry="10" opacity="0.8"/>
  <text x="450" y="95" font-family="Arial" font-size="18" text-anchor="middle" font-weight="bold">Phase 1: Input Preparation</text>
  
  <!-- Input Components -->
  <rect x="100" y="120" width="140" height="80" fill="#ffffff" stroke="#0066cc" stroke-width="1" rx="5" ry="5"/>
  <text x="170" y="145" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Base Query</text>
  <text x="170" y="165" font-family="Arial" font-size="12" text-anchor="middle">User-provided question</text>
  <text x="170" y="185" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">query_generator.py</text>
  
  <rect x="270" y="120" width="140" height="80" fill="#ffffff" stroke="#0066cc" stroke-width="1" rx="5" ry="5"/>
  <text x="340" y="145" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Query Variations</text>
  <text x="340" y="165" font-family="Arial" font-size="12" text-anchor="middle">Alternative perspectives</text>
  <text x="340" y="185" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">query_generator.py</text>
  
  <rect x="440" y="120" width="140" height="80" fill="#ffffff" stroke="#0066cc" stroke-width="1" rx="5" ry="5"/>
  <text x="510" y="145" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Instruction Templates</text>
  <text x="510" y="165" font-family="Arial" font-size="12" text-anchor="middle">Cognitive frameworks</text>
  <text x="510" y="185" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">instruction_templates.py</text>
  
  <rect x="610" y="120" width="140" height="80" fill="#ffffff" stroke="#0066cc" stroke-width="1" rx="5" ry="5"/>
  <text x="680" y="145" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Domain Contexts</text>
  <text x="680" y="165" font-family="Arial" font-size="12" text-anchor="middle">Application fields</text>
  <text x="680" y="185" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">domain_manager.py</text>
  
  <!-- Phase 2: Combination Generation -->
  <rect x="50" y="240" width="800" height="130" fill="#e6ffe6" stroke="#009900" stroke-width="2" rx="10" ry="10" opacity="0.8"/>
  <text x="450" y="265" font-family="Arial" font-size="18" text-anchor="middle" font-weight="bold">Phase 2: Combination Generation</text>
  
  <!-- Combination process -->
  <rect x="150" y="290" width="600" height="60" fill="#ffffff" stroke="#009900" stroke-width="1" rx="5" ry="5"/>
  <text x="450" y="315" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Combinatorial Process</text>
  <text x="450" y="335" font-family="Arial" font-size="12" text-anchor="middle">Models × Instructions × Queries × Domains</text>
  
  <text x="450" y="355" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - generate_combinations()</text>
  
  <!-- Phase 3: Execution -->
  <rect x="50" y="390" width="800" height="120" fill="#fff0e6" stroke="#cc6600" stroke-width="2" rx="10" ry="10" opacity="0.8"/>
  <text x="450" y="415" font-family="Arial" font-size="18" text-anchor="middle" font-weight="bold">Phase 3: Execution</text>
  
  <!-- API Integration -->
  <rect x="100" y="440" width="230" height="50" fill="#ffffff" stroke="#cc6600" stroke-width="1" rx="5" ry="5"/>
  <text x="215" y="465" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Model API Integration</text>
  <text x="215" y="480" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">model_api_integration.py</text>
  
  <!-- Prompt Engineering -->
  <rect x="350" y="440" width="230" height="50" fill="#ffffff" stroke="#cc6600" stroke-width="1" rx="5" ry="5"/>
  <text x="465" y="465" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Prompt Construction</text>
  <text x="465" y="480" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - execute_combinations()</text>
  
  <!-- Result Collection -->
  <rect x="600" y="440" width="230" height="50" fill="#ffffff" stroke="#cc6600" stroke-width="1" rx="5" ry="5"/>
  <text x="715" y="465" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Response Collection</text>
  <text x="715" y="480" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - execute_combinations()</text>
  
  <!-- Phase 4: Evaluation -->
  <rect x="50" y="530" width="800" height="120" fill="#e6e6ff" stroke="#6600cc" stroke-width="2" rx="10" ry="10" opacity="0.8"/>
  <text x="450" y="555" font-family="Arial" font-size="18" text-anchor="middle" font-weight="bold">Phase 4: Evaluation</text>
  
  <!-- Scoring -->
  <rect x="100" y="580" width="230" height="50" fill="#ffffff" stroke="#6600cc" stroke-width="1" rx="5" ry="5"/>
  <text x="215" y="605" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Multi-criteria Scoring</text>
  <text x="215" y="620" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">evaluation_scoring.py</text>
  
  <!-- Pattern Detection -->
  <rect x="350" y="580" width="230" height="50" fill="#ffffff" stroke="#6600cc" stroke-width="1" rx="5" ry="5"/>
  <text x="465" y="605" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Pattern Detection</text>
  <text x="465" y="620" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - evaluate_results()</text>
  
  <!-- Result Ranking -->
  <rect x="600" y="580" width="230" height="50" fill="#ffffff" stroke="#6600cc" stroke-width="1" rx="5" ry="5"/>
  <text x="715" y="605" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Top Results Ranking</text>
  <text x="715" y="620" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - get_top_results()</text>
  
  <!-- Phase 5: Synthesis -->
  <rect x="50" y="670" width="800" height="120" fill="#ffe6f2" stroke="#cc0066" stroke-width="2" rx="10" ry="10" opacity="0.8"/>
  <text x="450" y="695" font-family="Arial" font-size="18" text-anchor="middle" font-weight="bold">Phase 5: Synthesis and Output</text>
  
  <!-- Idea Synthesis -->
  <rect x="100" y="720" width="230" height="50" fill="#ffffff" stroke="#cc0066" stroke-width="1" rx="5" ry="5"/>
  <text x="215" y="745" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Idea Synthesis</text>
  <text x="215" y="760" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - synthesize_ideas()</text>
  
  <!-- Output Formatting -->
  <rect x="350" y="720" width="230" height="50" fill="#ffffff" stroke="#cc0066" stroke-width="1" rx="5" ry="5"/>
  <text x="465" y="745" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Output Formatting</text>
  <text x="465" y="760" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">main.py - format_output()</text>
  
  <!-- Result Viewer -->
  <rect x="600" y="720" width="230" height="50" fill="#ffffff" stroke="#cc0066" stroke-width="1" rx="5" ry="5"/>
  <text x="715" y="745" font-family="Arial" font-size="14" text-anchor="middle" font-weight="bold">Result Viewer</text>
  <text x="715" y="760" font-family="Arial" font-size="12" text-anchor="middle" font-style="italic">result_viewer.py</text>
  
  <!-- Arrows connecting phases -->
  <path d="M 450 220 L 450 240" stroke="#333333" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 450 370 L 450 390" stroke="#333333" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 450 510 L 450 530" stroke="#333333" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <path d="M 450 650 L 450 670" stroke="#333333" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Feedback loop -->
  <path d="M 50 400 C 20 400 20 200 50 200" stroke="#993399" stroke-width="2" stroke-dasharray="5,5" fill="none" marker-end="url(#arrowhead)"/>
  <text x="25" y="300" font-family="Arial" font-size="12" text-anchor="middle" transform="rotate(270 25 300)" fill="#993399">Feedback Loop</text>
  
  <!-- Arrowhead definition -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" />
    </marker>
  </defs>
</svg>
